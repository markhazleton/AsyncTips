<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AsyncApi</name>
    </assembly>
    <members>
        <member name="T:AsyncApi.Controllers.api.RemoteController">
            <summary>
            Remote Server MOCK
            </summary>
        </member>
        <member name="M:AsyncApi.Controllers.api.RemoteController.#ctor(Microsoft.Extensions.Logging.ILogger{AsyncApi.Controllers.api.RemoteController})">
             <summary>
            
             </summary>
             <param name="logger"></param>
        </member>
        <member name="M:AsyncApi.Controllers.api.RemoteController.GetWeather(System.Int32)">
            <summary>
            Get the current forecast
            </summary>
            <returns></returns>
        </member>
        <member name="M:AsyncApi.Controllers.api.RemoteController.GetResults(AsyncDemo.MockResults)">
            <summary>
            Post Results
            </summary>
            <param name="model">Instance of the requestModel</param>
            <returns></returns>
            <response code="200">Request Processed successfully.</response>
            <response code="200">Request Timeout.</response>
        </member>
        <member name="T:AsyncApi.Controllers.BaseController">
            <summary>
            Base Mvc Controller
            </summary>
        </member>
        <member name="F:AsyncApi.Controllers.BaseController.retryCountKey">
            <summary>
            Retry Count
            </summary>
        </member>
        <member name="F:AsyncApi.Controllers.BaseController._httpIndexPolicy">
            <summary>
            Index Policy
            </summary>
        </member>
        <member name="F:AsyncApi.Controllers.BaseController._httpWeatherPolicy">
            <summary>
            Weather Policy
            </summary>
        </member>
        <member name="F:AsyncApi.Controllers.BaseController._httpClient">
            <summary>
            Shared Http Client
            </summary>
        </member>
        <member name="F:AsyncApi.Controllers.BaseController.stopWatch">
            <summary>
            Shared Stopwatch
            </summary>
        </member>
        <member name="F:AsyncApi.Controllers.BaseController.jitter">
            <summary>
            Shared Jitter
            </summary>
        </member>
        <member name="M:AsyncApi.Controllers.BaseController.#cctor">
            <summary>
            Static Base Constructor
            </summary>
        </member>
        <member name="M:AsyncApi.Controllers.BaseController.#ctor">
            <summary>
            Base Controller Constructor
            </summary>
        </member>
        <member name="T:AsyncApi.Controllers.HomeController">
            <summary>
            Home MVC Controller
            </summary>
        </member>
        <member name="M:AsyncApi.Controllers.HomeController.#ctor(Microsoft.Extensions.Logging.ILogger{AsyncApi.Controllers.HomeController})">
             <summary>
            
             </summary>
             <param name="logger"></param>
        </member>
        <member name="M:AsyncApi.Controllers.HomeController.Error">
            <summary>
            Home error page
            </summary>
            <returns></returns>
        </member>
        <member name="M:AsyncApi.Controllers.HomeController.Create(AsyncDemo.MockResults)">
            <summary>
            
            </summary>
            <param name="mockResult"></param>
            <returns></returns>
        </member>
        <member name="M:AsyncApi.Controllers.HomeController.Index(System.Int32,System.Int32)">
            <summary>
            Home Page
            </summary>
            <param name="loopCount"></param>
            <param name="maxTimeMs"></param>
            <returns></returns>
        </member>
        <member name="M:AsyncApi.Controllers.HomeController.Privacy">
            <summary>
            Privacy Page
            </summary>
            <returns></returns>
        </member>
        <member name="T:AsyncApi.Controllers.PollyController">
            <summary>
            Polly Controller
            </summary>
        </member>
        <member name="M:AsyncApi.Controllers.PollyController.#ctor(Microsoft.Extensions.Logging.ILogger{AsyncApi.Controllers.PollyController})">
             <summary>
            
             </summary>
             <param name="logger"></param>
        </member>
        <member name="M:AsyncApi.Controllers.PollyController.Index(System.Int32,System.Int32)">
            <summary>
            Home Page
            </summary>
            <param name="loopCount"></param>
            <param name="maxTimeMs"></param>
            <returns></returns>
        </member>
        <member name="T:AsyncApi.Controllers.WeatherController">
            <summary>
            Weather Controller
            </summary>
        </member>
        <member name="M:AsyncApi.Controllers.WeatherController.#ctor(Microsoft.Extensions.Logging.ILogger{AsyncApi.Controllers.WeatherController})">
             <summary>
            
             </summary>
             <param name="logger"></param>
        </member>
        <member name="M:AsyncApi.Controllers.WeatherController.Index(System.Int32)">
            <summary>
            Weather
            </summary>
            <returns></returns>
        </member>
        <member name="T:AsyncApi.HttpContextExtensions">
            <summary>
            HttpContextExtensions
            </summary>
        </member>
        <member name="M:AsyncApi.HttpContextExtensions.AddHttpContextAccessor(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            AddHttpContextAccessor
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:AsyncApi.HttpContextExtensions.UseHttpContext(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            UseHttpContext
            </summary>
            <param name="app"></param>
            <returns></returns>
        </member>
        <member name="T:AsyncApi.Models.ErrorViewModel">
            <summary>
            Error View Model
            </summary>
        </member>
        <member name="P:AsyncApi.Models.ErrorViewModel.RequestId">
            <summary>
            Request ID
            </summary>
        </member>
        <member name="P:AsyncApi.Models.ErrorViewModel.ShowRequestId">
            <summary>
            Show Request Id
            </summary>
        </member>
        <member name="T:AsyncApi.Models.RequestModel">
            <summary>
            Request Model
            </summary>
        </member>
        <member name="P:AsyncApi.Models.RequestModel.loopCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:AsyncApi.Models.RequestModel.maxTimeMs">
            <summary>
            
            </summary>
        </member>
        <member name="T:AsyncApi.MyHttpContext">
            <summary>
            MyHttpContext
            </summary>
        </member>
        <member name="P:AsyncApi.MyHttpContext.Current">
            <summary>
            Current Context
            </summary>
        </member>
        <member name="P:AsyncApi.MyHttpContext.Version">
            <summary>
            My Test
            </summary>
            <returns></returns>
        </member>
        <member name="P:AsyncApi.MyHttpContext.AppBaseUrl">
            <summary>
             AppBaseUrl
            </summary>
        </member>
        <member name="T:AsyncApi.Policies.PolicyContextItems">
            <summary>
            
            </summary>
        </member>
        <member name="F:AsyncApi.Policies.PolicyContextItems.Logger">
            <summary>
            
            </summary>
        </member>
        <member name="T:AsyncApi.Policies.PolicyNames">
            <summary>
            
            </summary>
        </member>
        <member name="F:AsyncApi.Policies.PolicyNames.BasicRetry">
            <summary>
            
            </summary>
        </member>
        <member name="T:AsyncApi.Policies.PollyContextExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:AsyncApi.Policies.PollyContextExtensions.TryGetLogger(Polly.Context,Microsoft.Extensions.Logging.ILogger@)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="logger"></param>
            <returns></returns>
        </member>
        <member name="T:AsyncApi.Policies.PollyRegistryExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:AsyncApi.Policies.PollyRegistryExtensions.AddBasicRetryPolicy(Polly.Registry.IPolicyRegistry{System.String})">
            <summary>
            
            </summary>
            <param name="policyRegistry"></param>
            <returns></returns>
        </member>
        <member name="T:AsyncApi.Policies.PollyServiceCollectionExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:AsyncApi.Policies.PollyServiceCollectionExtensions.AddPollyPolicies(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="T:AsyncApi.Program">
            <summary>
            Program
            </summary>
        </member>
        <member name="M:AsyncApi.Program.Main(System.String[])">
            <summary>
            Main
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:AsyncApi.Program.CreateHostBuilder(System.String[])">
            <summary>
            Create Host Builder
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:AsyncApi.Startup">
            <summary>
            Startup 
            </summary>
        </member>
        <member name="P:AsyncApi.Startup.Configuration">
            <summary>
            
            </summary>
        </member>
        <member name="M:AsyncApi.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="M:AsyncApi.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            This method gets called by the runtime. Use this method to add services to the container.
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:AsyncApi.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
            </summary>
            <param name="app"></param>
            <param name="env"></param>
        </member>
    </members>
</doc>
